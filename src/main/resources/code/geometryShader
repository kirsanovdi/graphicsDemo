#version 330 core

    layout (triangles) in;
    layout (triangle_strip, max_vertices = 3) out;

    out vec3 Normal;
    out vec3 crntPos;
    out vec2 texCoord;

    in DATA
    {
        vec3 crntPos;
        vec2 texCoord;
        mat4 projection;
    } data_in[];

    void main(){
        vec3 vector01 = normalize(data_in[0].crntPos - data_in[1].crntPos);
        vec3 vector21 = normalize(data_in[2].crntPos - data_in[1].crntPos);
        vec3 surfaceNormal = normalize(cross(vector01, vector21));

        gl_Position = data_in[0].projection * gl_in[0].gl_Position;
        texCoord = data_in[0].texCoord;
        Normal = surfaceNormal;
        crntPos = data_in[0].crntPos;
        EmitVertex();

        gl_Position = data_in[1].projection * gl_in[1].gl_Position;
        texCoord = data_in[1].texCoord;
        Normal = surfaceNormal;
        crntPos = data_in[1].crntPos;
        EmitVertex();

        gl_Position = data_in[2].projection * gl_in[2].gl_Position;
        texCoord = data_in[2].texCoord;
        Normal = surfaceNormal;
        crntPos = data_in[2].crntPos;
        EmitVertex();

        EndPrimitive();
    }