#version 330 core

    layout (triangles) in;
    layout (triangle_strip, max_vertices = 3) out;

    uniform mat4 camMatrix;

    out vec3 Normal;
    out vec3 crntPos;
    out vec2 texCoord;
    out float dataID;

    in DATA
    {
        vec2 texCoord;
        float dataID;
    } data_in[];

    void main(){
        vec3 a = vec3(gl_in[0].gl_Position);
        vec3 b = vec3(gl_in[1].gl_Position);
        vec3 c = vec3(gl_in[2].gl_Position);

        vec3 vector01 = normalize(a - b);
        vec3 vector21 = normalize(c - b);
        vec3 surfaceNormal = normalize(cross(vector01, vector21));

        gl_Position = camMatrix * gl_in[0].gl_Position;
        texCoord = data_in[0].texCoord;
        Normal = surfaceNormal;
        dataID = data_in[0].dataID;
        crntPos = a;
        EmitVertex();

        gl_Position = camMatrix * gl_in[1].gl_Position;
        texCoord = data_in[1].texCoord;
        Normal = surfaceNormal;
        dataID = data_in[1].dataID;
        crntPos = b;
        EmitVertex();

        gl_Position = camMatrix * gl_in[2].gl_Position;
        texCoord = data_in[2].texCoord;
        Normal = surfaceNormal;
        dataID = data_in[2].dataID;
        crntPos = c;
        EmitVertex();

        EndPrimitive();
    }